Public Sub ExcelToJSON()    ' check inputs before processing        Dim outputFileName As String    outputFileName = range("d2")        If outputFileName = "" Then        MsgBox "outputFileName Empty Error"        Exit Sub    End If        Dim interfaceName As String    interfaceName = range("b2")        If interfaceName = "" Then        MsgBox "Name Empty Error"        Exit Sub    End If        ActiveCell.Select    range(Selection, Selection.End(xlToRight)).Select    range(Selection, Selection.End(xlDown)).Select            Dim rng As range    Set rng = Selection        ' Check there must be at least two columns in the Excel file    If rng.Columns.Count < 2 Then        MsgBox CVErr(xlErrNA)        Exit Sub    End If        ' processing        Dim Name As String            Dim dataLoop, headerLoop As Long    ' Get the first row of the Excel file as a header    Dim headerRange As range: Set headerRange = range(rng.Rows(1).Address)    ' Count the number of columns of targeted Excel file    Dim colCount As Long: colCount = headerRange.Columns.Count            Open outputFileName For Output As #1        Print #1, "export interface " & interfaceName & " {"        For interfaceLoop = 1 To headerRange.Columns.Count        Dim propertyName As String        propertyName = headerRange.Columns(interfaceLoop)                Dim line As String        line = ""                If Left(propertyName, 1) = "#" Then            'line = vbTab & vbTab            line = line & Right(propertyName, Len(propertyName) - 1)            'MsgBox ("number")            line = line & ":number;"        Else            'line = vbTab & vbTab            line = line & propertyName            line = line & ":string;"        End If                Print #1, line            Next    Print #1, "}" + vbCrLf            Dim collectionName As String    collectionName = interfaceName & "s"        Print #1, "export const " & UCase(collectionName) & ": " & interfaceName & "[] = ["        For dataLoop = 1 To rng.Rows.Count        ' Skip the first row of the Excel file because it is used as header        If dataLoop > 1 Then            ' Start data row            Dim jsonData As String: jsonData = "{"            ' Loop through each column and combine with the header            For headerLoop = 1 To colCount                Dim propName As String                propName = headerRange(headerLoop)                If Left(propName, 1) = "#" Then                    jsonData = jsonData & Right(propName, Len(propName) - 1)                Else                    jsonData = jsonData & propName                End If                jsonData = jsonData & ":"                                Dim val As String                If Left(propName, 1) = "#" Then                    val = rng.Value2(dataLoop, headerLoop)                Else                    val = "'" & rng.Value2(dataLoop, headerLoop) & "'"                End If                                jsonData = jsonData & val & ", "            Next headerLoop            ' Strip out the comma in last value of each row            jsonData = Left(jsonData, Len(jsonData) - 2)            ' End data row            Print #1, jsonData & "},"        End If    Next    Print #1, "]"    Close #1        MsgBox "done"End SubPublic Sub getValue()        If Left(propertyName, 1) = "#" Then            line = vbTab & vbTab            line = line & Right(Len(propertyName) - 1)            'MsgBox ("number")            line = line & ":number;"        Else            line = vbTab & vbTab            line = line & propertyName            line = line & ":string;"        End IfEnd Sub